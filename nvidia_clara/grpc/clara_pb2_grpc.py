# Copyright (c) 2020, NVIDIA CORPORATION.  All rights reserved.
#
# NVIDIA CORPORATION and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from NVIDIA CORPORATION is strictly prohibited.

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from nvidia_clara.grpc import clara_pb2 as nvidia_dot_clara_dot_platform_dot_clara__pb2


class ClaraStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Stop = channel.unary_unary(
        '/nvidia.clara.platform.Clara/Stop',
        request_serializer=nvidia_dot_clara_dot_platform_dot_clara__pb2.ClaraStopRequest.SerializeToString,
        response_deserializer=nvidia_dot_clara_dot_platform_dot_clara__pb2.ClaraStopResponse.FromString,
        )
    self.Version = channel.unary_unary(
        '/nvidia.clara.platform.Clara/Version',
        request_serializer=nvidia_dot_clara_dot_platform_dot_clara__pb2.ClaraVersionRequest.SerializeToString,
        response_deserializer=nvidia_dot_clara_dot_platform_dot_clara__pb2.ClaraVersionResponse.FromString,
        )


class ClaraServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Stop(self, request, context):
    """Requests resource cleanup.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Version(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ClaraServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Stop': grpc.unary_unary_rpc_method_handler(
          servicer.Stop,
          request_deserializer=nvidia_dot_clara_dot_platform_dot_clara__pb2.ClaraStopRequest.FromString,
          response_serializer=nvidia_dot_clara_dot_platform_dot_clara__pb2.ClaraStopResponse.SerializeToString,
      ),
      'Version': grpc.unary_unary_rpc_method_handler(
          servicer.Version,
          request_deserializer=nvidia_dot_clara_dot_platform_dot_clara__pb2.ClaraVersionRequest.FromString,
          response_serializer=nvidia_dot_clara_dot_platform_dot_clara__pb2.ClaraVersionResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'nvidia.clara.platform.Clara', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
